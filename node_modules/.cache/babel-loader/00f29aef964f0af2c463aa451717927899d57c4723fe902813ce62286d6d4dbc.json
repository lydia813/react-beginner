{"ast":null,"code":"var _jsxFileName = \"/Users/zum/Desktop/react_study/nomadcoders/react-beginner/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true); // 첫 번째 아이템(loading)은 데이터, 두 번째 아이템(setLoading)은 데이터를 수정할 수 있는 함수\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`)).json();\n    // const response = await fetch(                 * 위에 쓴 구문을 풀어 쓰면 이 구문과 같음 *\n    //   `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`\n    // );\n    // const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"movies.map()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"1CKmgsbuFjewbGnYkjmhEBs6qQ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","loading","setLoading","movies","setMovies","getMovies","json","fetch","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zum/Desktop/react_study/nomadcoders/react-beginner/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true); // 첫 번째 아이템(loading)은 데이터, 두 번째 아이템(setLoading)은 데이터를 수정할 수 있는 함수\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`\n      )\n    ).json();\n    // const response = await fetch(                 * 위에 쓴 구문을 풀어 쓰면 이 구문과 같음 *\n    //   `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=year`\n    // );\n    // const json = await response.json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return <div>{loading ? <h1>Loading...</h1> : <div>movies.map()</div>}</div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MAAM,CACjB,MAAMC,KAAK,CACR,wEAAuE,CACzE,EACDD,IAAI,EAAE;IACR;IACA;IACA;IACA;IACAF,SAAS,CAACE,IAAI,CAACE,IAAI,CAACL,MAAM,CAAC;IAC3BD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDP,SAAS,CAAC,MAAM;IACdU,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOP,OAAA;IAAAW,QAAA,EAAMR,OAAO,gBAAGH,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,gBAAGf,OAAA;MAAAW,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAC7E;AAACb,EAAA,CApBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}